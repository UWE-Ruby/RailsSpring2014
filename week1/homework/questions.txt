Reading:
✓Chapter 1 - Section 1.1 on Bundler
✓Chapter 3 REST, Resources, andRails - Sections 3.1 - 3.6

Code:
✓Create new rails app
✓Add a ruby version and gemset to it
✓Add one page of static content
Create one Resource with Scaffolding
✓Put it on Github

rvm use 2.0
gem install rails
rails new run_out_of_town_on_a_rail -T
cd run_out_of_town_on_a_rail
rvm --create use 2.0@run_out_of_town_on_a_rail --ruby-version
echo "#customized:
group :test, :development do
  gem 'rspec-rails'
end" >>Gemfile
sed -i "s/gem 'sdoc', .*group: :doc/#customized:\ngroup :doc do\n  gem 'sdoc', require: false\nend/" Gemfile
bundle install
rails g rspec:install
git init
git add .
git commit .

Questions:
1. What is the difference between Bundler and RVM?
RVM manages multiple versions of Ruby on the same machine, and gemsets.
Bundler manages dependancies. One might have a gemset for a project, but it 
will not be shared with others. With a Bundler Gemfile under VC, anyone who
grabs a project can have the dependancies auto-installed.

2. What is REST and why is it useful?
3. What does CRUD stand for? 
Create, Read, Update, Destroy. 

4. What does this line of code do, and what file in my rails app would it go in?
   resources :students, except: :destroy

Project Description:
<please put your project description here>
# for quarter project. - open source *and* publicly hosted. (Heroku)
ideas:
1) web wrapper for bread-calc. who would use it? home bakers, probably not,
  except for the few like me who are interested in baker's percentages. Pro
  bakers? Maybe, but they mostly already have their recipes worked out, and
  probably do it by hand. Would adding cost of goods to it make it worth 
  a baker's time?
2) contraction timer. A rewrite of a simple script I wrote when my wife went
  into labor. They won't let you come to the hospital until contractions are
  N minutes apart, so you need to record them, and measure the intervals, 
  which is not so great when you are excited, nervous, and distracted. Web UI
  might be good for this because you don't have to install, can access 
  anywhere(-ish). Bad part is mixing privacy / ease of use concerns. You don't
  want to log in for every contraction, but you also don't want any possibility
  of scrambling people's records, and I would prefer not to have it be 
  something insurance companies / governments could subpoena for gross purposes.
3) web front-end for https://github.com/eleybourn/Book-Catalogue. Maybe a bit
  stupid, because the point of this app is to enter the books using your 
  phone's barcode scanner. But it would be nice to have a web front-end for 
  *reading* the data, instead of the very stupid export-as-csv-and-munge-with-
  perl-into-static-html script I am using now.


Link to code on Github:
<please put the link to your code on github here>
https://github.com/nbirnel/run_out_of_town_on_a_rail
