Reading:
  Chapter 6: Sections 4-6
  Chapter 7: All
  Chapter 9: Section 1
  Chapter 11: Sections 9-11

Code:
  Add 2 relationships to your app:
    1. Has Many (one-to-many)
    2. Has Many Through (many-to-many)
  Add 2 named scopes

Questions:
1. What is ActiveRecord and why is it useful?

Active record is an approach to accessing data in a database. A database table or view is wrapped into a class, and because of this, an object instance is tied to a single row in the table. Essentially, it allows you to treat these rows as objects in rails and makes working with databases easier.

2. What problems could happen if you change a migration file after you have run it and committed it to github? (list 2)

Rails won't update the schema file, which means you (and your team) could be working with an outdated database. It also requires you to rollback the migration and remigrate again in order for the schema file to recognize the new changes.

3. What problems can you run into with the Rails has_and_belongs_to_many method? (list 2)

The has_and_belongs_to_many method isn't flexible, and it prevents you from making changes to the migration file.

4. How is Rails form_for object oriented?

You can use block parameters with it.

5. How would I use postgres in production and sqlite for development? What files would I change and how would I change them?

You can use postgres in production and sqlite for development adding those gems under the appropriate group in your Gemfile. For example,

group :test, :development do
	gem 'sqlite3'
end
group :production do
	gem 'pg'
end

You also need configure the details in the 'config/database.yml' file.

6. What is the seeds file? How do I run it?

A seed file is used to seed a database with initial data. You can run it by using rake db:seed in the command line.

Link to code on Github:
github.com/brandonlafave/submission_tracker
