Reading:
  Chapter 6: Sections 4-6
  Chapter 7: All
  Chapter 9: Section 1
  Chapter 11: Sections 9-11

Code:
  Add 2 relationships to your app:
    1. Has Many (one-to-many)
    2. Has Many Through (many-to-many)
  Add 2 named scopes

Questions:
1. What is ActiveRecord and why is it useful?
2. What problems could happen if you change a migration file after you have run it and committed it to github? (list 2)
  a) Production could have run the migration already, and when they deploy
  later changes they won't be in sync development. 
  b) When production pulls, instead of a clean pull they may get a conflict,
  which is presumably not their job to know how to reconcile.

3. What problems can you run into with the Rails has_and_belongs_to_many method? (list 2)
4. How is Rails form_for object oriented?
5. How would I use postgres in production and sqlite for development? What files would I change and how would I change them?
  Add a postgresql adaptor to config/databases.yml (more Rails cut and paste,
  sigh). Bethany put the user/pass combo in here, but said that best practice
  might be to .gitignore this file, and provide a database.yml.sample. Lynne
  suggested something like:
    password: ENV{"POSTGRESQL_PROD_PASS"}
  
  Add pg to Gemfile for :production. (note - I had to install some headers
  in Ubuntu for this - bundler couldn't seem to figure out the system
  dependencies on it's own. This would concern me for deployment.)

6. What is the seeds file? How do I run it?
  db/seeds.rb contains ruby code to generate a default set of data - perhaps
  for testing, perhaps for an initial population for production.
  It is imperative in style:
    SomeClass.create(a_key: "It's value",
      another_key: "another value"
      )
  and is run by 
    rake db:seed
  You can pull in csv, yaml, etc by editing your Rakefile:
  http://stackoverflow.com/questions/4410794/ruby-on-rails-import-data-from-a-csv-file
  (ie, on the fly generate a hash for each record)

Link to code on Github:
<please put the link to your code on github here>

# vim: sw=2 wrap
