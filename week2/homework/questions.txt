Reading:
Chapter 4 Working with Controllers: 4.3 - 4.7  (Skip the rack console exercise - unless you really want to do it)
Chapter 2 Routing: 2.1, 2.2, 2.4, 2.6, 2.7 

Code:
Setup a root route to a home or welcome controller
Have a link on your homepage to your scaffolded resource from last week
Have a link on your homepage that triggers a change on your homepage (wording change, expansion of text, change a color, etc...)
Create a view helper that will generate different content on your homepage based on a param value

Questions:
1. Why does a Rails app have routing? 
Routing serves two main purposes, it maps requests to controller
action methods and it enables the dynamic generation of URLs for the
programmer to use as arguments to methods like link_to and
redirect_to.

2. How would you render the same view for two different controllers? (code example is fine)
By default, controllers in Rails automatically render views with names
that correspond to valid routes. I can render the same view for two
different controllers by explicitly calling render with the view that
I want to load. For example, I can choose to render action: 'new' within 
the create action by explicitly calling it.

3. If you wanted to check a parameter before calling any controller
action, what would you do? (code example is fine)
In this case we can use an action callback, which enables controllers to run
shared pre and post processing code for its actions. These callbacks
can be used to do authentication, caching or auditing before the
intended action is performed. Ex. before_action
:verify_open_shop

Link to code on Github:
https://github.com/rukk86/week1_railsapp
